{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nconst BoardRequest = async request_type => {\n  _s();\n  const [board, setBoard] = useState();\n  //event.preventDefault();\n  switch (request_type) {\n    case 'get':\n      //let response = await fetch('http://127.0.0.1:8000/api/boardsrequest');\n      //let data = response.json;\n      //let setBoard = ProjectRequest();\n      setBoard(100);\n      break;\n    case 'post':\n      let request = await fetch('http://127.0.0.1:8000/api/boardsrequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: 'pass'\n      }).then(response => {\n        if (!response.ok) {\n          console.log('Something went wrong while posting board details');\n          throw new Error('Not Okay', {\n            'Cause': response\n          });\n        } else {\n          console.log('Board details successfully created!');\n        }\n      }).then(data => console.log('Board has been registered', {\n        'Board': data\n      })).catch(error => console.log(\"Encountered error while trying to register board\", {\n        \"Error encountered\": error\n      }));\n      break;\n    default:\n      console.log(\"Cannot register user's board actions\");\n      break;\n  }\n};\n_s(BoardRequest, \"2vjBDtdgfC/1yprHq/03FFUoiDU=\");\n_c = BoardRequest;\nexport default BoardRequest;\nvar _c;\n$RefreshReg$(_c, \"BoardRequest\");","map":{"version":3,"names":["React","useState","BoardRequest","request_type","_s","board","setBoard","request","fetch","method","headers","body","then","response","ok","console","log","Error","data","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/User/maincomponent/projectmanagement/frontend/src/components/BoardRequest.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BoardRequest = async (request_type) => {\r\n    const [board, setBoard] = useState();\r\n    //event.preventDefault();\r\n    switch(request_type){\r\n        case 'get':\r\n            //let response = await fetch('http://127.0.0.1:8000/api/boardsrequest');\r\n            //let data = response.json;\r\n            //let setBoard = ProjectRequest();\r\n            setBoard(100);\r\n\r\n            break;\r\n        case 'post':\r\n            let request = await fetch('http://127.0.0.1:8000/api/boardsrequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: 'pass',\r\n\r\n            }).then((response) => {\r\n                if (!response.ok){\r\n                    console.log('Something went wrong while posting board details');\r\n                    throw new Error('Not Okay', {'Cause': response})\r\n                }else{\r\n                    console.log('Board details successfully created!')\r\n                }\r\n            })\r\n            .then(data => console.log('Board has been registered', {'Board': data}))\r\n            .catch(error => console.log(\"Encountered error while trying to register board\", {\"Error encountered\": error}))\r\n\r\n            break;\r\n\r\n        default:\r\n            console.log(\"Cannot register user's board actions\");\r\n\r\n            break;\r\n    }\r\n\r\n    \r\n};\r\n\r\n\r\nexport default BoardRequest"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,YAAY,GAAG,MAAOC,YAAY,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,EAAE;EACpC;EACA,QAAOE,YAAY;IACf,KAAK,KAAK;MACN;MACA;MACA;MACAG,QAAQ,CAAC,GAAG,CAAC;MAEb;IACJ,KAAK,MAAM;MACP,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAE;MAEV,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAC;UACbC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;UAC/D,MAAM,IAAIC,KAAK,CAAC,UAAU,EAAE;YAAC,OAAO,EAAEJ;UAAQ,CAAC,CAAC;QACpD,CAAC,MAAI;UACDE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QACtD;MACJ,CAAC,CAAC,CACDJ,IAAI,CAACM,IAAI,IAAIH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;QAAC,OAAO,EAAEE;MAAI,CAAC,CAAC,CAAC,CACvEC,KAAK,CAACC,KAAK,IAAIL,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAE;QAAC,mBAAmB,EAAEI;MAAK,CAAC,CAAC,CAAC;MAE9G;IAEJ;MACIL,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MAEnD;EAAM;AAIlB,CAAC;AAACZ,EAAA,CAvCIF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA0ClB,eAAeA,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}